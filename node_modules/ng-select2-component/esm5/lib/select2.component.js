/**
 * @fileoverview added by tsickle
 * Generated from: lib/select2.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Attribute, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, Input, Optional, Output, QueryList, Self, TemplateRef, ViewChild, ViewChildren } from '@angular/core';
import { FormGroupDirective, NgControl, NgForm } from '@angular/forms';
import { Subject } from 'rxjs';
import { Select2Utils, timeout } from './select2-utils';
/** @type {?} */
var nextUniqueId = 0;
/** @type {?} */
var displaySearchStatusList = ['default', 'hidden', 'always'];
var Select2 = /** @class */ (function () {
    function Select2(_changeDetectorRef, _parentForm, _parentFormGroup, _control, tabIndex) {
        this._changeDetectorRef = _changeDetectorRef;
        this._parentForm = _parentForm;
        this._parentFormGroup = _parentFormGroup;
        this._control = _control;
        this.minCharForSearch = 0;
        this.limitSelection = 0;
        /**
         * the max height of the results container when opening the select
         */
        this.resultMaxHeight = '200px';
        this.update = new EventEmitter();
        this.open = new EventEmitter();
        this.close = new EventEmitter();
        this.focus = new EventEmitter();
        this.blur = new EventEmitter();
        this.search = new EventEmitter();
        this.option = null;
        this.isOpen = false;
        /**
         * Whether the element is focused or not.
         */
        this.focused = false;
        this.hoveringValue = null;
        this.innerSearchText = '';
        this._stateChanges = new Subject();
        this._disabled = false;
        this._required = false;
        this._readonly = false;
        this._hideSelectedItems = false;
        this._clickDetection = false;
        this._uid = "select2-" + nextUniqueId++;
        /**
         * View -> model callback called when select has been touched
         */
        this._onTouched = (/**
         * @return {?}
         */
        function () {
            // do nothing
        });
        /**
         * View -> model callback called when value changes
         */
        this._onChange = (/**
         * @return {?}
         */
        function () {
            // do nothing
        });
        this.id = this.id;
        this._tabIndex = parseInt(tabIndex, 10) || 0;
        if (this._control) {
            this._control.valueAccessor = this;
        }
        this._clickDetectionFc = this.clickDetection.bind(this);
    }
    Object.defineProperty(Select2.prototype, "select2Options", {
        get: /**
         * @return {?}
         */
        function () {
            return this.multiple ? (/** @type {?} */ (this.option)) : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "select2Option", {
        get: /**
         * @return {?}
         */
        function () {
            return this.multiple ? null : (/** @type {?} */ (this.option));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "searchText", {
        get: /**
         * @return {?}
         */
        function () {
            return this.innerSearchText;
        },
        set: /**
         * @param {?} text
         * @return {?}
         */
        function (text) {
            if (this.customSearchEnabled) {
                this.search.emit({
                    component: this,
                    value: this._value,
                    search: text
                });
            }
            this.innerSearchText = text;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "minCountForSearch", {
        /** minimal data of show the search field */
        get: /**
         * minimal data of show the search field
         * @return {?}
         */
        function () { return this._minCountForSearch; },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._minCountForSearch = value;
            this.updateSearchBox();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "id", {
        /** Unique id of the element. */
        get: /**
         * Unique id of the element.
         * @return {?}
         */
        function () { return this._id; },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) { this._id = value || this._uid; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "required", {
        /** Whether the element is required. */
        get: /**
         * Whether the element is required.
         * @return {?}
         */
        function () { return this._required; },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) { this._required = this._coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "disabled", {
        /** Whether selected items should be hidden. */
        get: /**
         * Whether selected items should be hidden.
         * @return {?}
         */
        function () { return this._control ? this._control.disabled : this._disabled; },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) { this._disabled = this._coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "hideSelectedItems", {
        /** Whether items are hidden when has. */
        get: /**
         * Whether items are hidden when has.
         * @return {?}
         */
        function () { return this._hideSelectedItems; },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) { this._hideSelectedItems = this._coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "readonly", {
        /** Whether the element is readonly. */
        get: /**
         * Whether the element is readonly.
         * @return {?}
         */
        function () { return this._readonly; },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) { this._readonly = this._coerceBooleanProperty(value); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "value", {
        /** The input element's value. */
        get: /**
         * The input element's value.
         * @return {?}
         */
        function () { return this._value; },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            var _this = this;
            if (this.testValueChange(this._value, value)) {
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this._value = value;
                    _this.writeValue(value);
                }), 10);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "tabIndex", {
        /** Tab index for the select2 element. */
        get: /**
         * Tab index for the select2 element.
         * @return {?}
         */
        function () { return this.disabled ? -1 : this._tabIndex; },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (typeof value !== 'undefined') {
                this._tabIndex = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "ariaInvalid", {
        get: /**
         * @return {?}
         */
        function () {
            return this._isErrorState();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "classMaterial", {
        get: /**
         * @return {?}
         */
        function () {
            return this.material === '' || this.material === true || this.material === 'true';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "classNostyle", {
        get: /**
         * @return {?}
         */
        function () {
            return this.noStyle === '' || this.noStyle === true || this.noStyle === 'true';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Select2.prototype, "select2above", {
        get: /**
         * @return {?}
         */
        function () {
            return this.listPosition === 'above';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    Select2.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var option = Select2Utils.getOptionsByValue(this.data, this._control ? this._control.value : this.value, this.multiple);
        if (option !== null) {
            this.option = option;
        }
        if (!Array.isArray(option)) {
            this.hoveringValue = (/** @type {?} */ (this.value));
        }
        this.updateSearchBox();
    };
    /**
     * @return {?}
     */
    Select2.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.selectionElement = (/** @type {?} */ (this.selection.nativeElement));
        this.searchInputElement = (/** @type {?} */ (this.searchInput.nativeElement));
        this.resultsElement = (/** @type {?} */ (this.resultContainer.nativeElement));
    };
    /**
     * @return {?}
     */
    Select2.prototype.ngDoCheck = /**
     * @return {?}
     */
    function () {
        this.updateSearchBox();
        this._dirtyCheckNativeValue();
    };
    /**
     * @return {?}
     */
    Select2.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        window.document.body.removeEventListener('click', this._clickDetectionFc);
    };
    /**
     * @return {?}
     */
    Select2.prototype.updateSearchBox = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var hidden = this.customSearchEnabled
            ? false
            : Select2Utils.isSearchboxHiddex(this.data, this._minCountForSearch);
        if (this.isSearchboxHidden !== hidden) {
            this.isSearchboxHidden = hidden;
        }
    };
    /**
     * @return {?}
     */
    Select2.prototype.hideSearch = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var displaySearchStatus = displaySearchStatusList.indexOf(this.displaySearchStatus) > -1
            ? this.displaySearchStatus
            : 'default';
        return (displaySearchStatus === 'default' && this.isSearchboxHidden) || displaySearchStatus === 'hidden';
    };
    /**
     * @param {?} option
     * @return {?}
     */
    Select2.prototype.getOptionStyle = /**
     * @param {?} option
     * @return {?}
     */
    function (option) {
        return 'select2-results__option ' +
            (option.value === this.hoveringValue ? 'select2-results__option--highlighted ' : '') +
            (option.classes || '');
    };
    /**
     * @param {?} option
     * @return {?}
     */
    Select2.prototype.mouseenter = /**
     * @param {?} option
     * @return {?}
     */
    function (option) {
        if (!option.disabled) {
            this.hoveringValue = option.value;
        }
    };
    /**
     * @param {?} option
     * @return {?}
     */
    Select2.prototype.click = /**
     * @param {?} option
     * @return {?}
     */
    function (option) {
        if (this.testSelection(option)) {
            this.select(option);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    Select2.prototype.prevChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.stopPropagation();
    };
    /**
     * @return {?}
     */
    Select2.prototype.toggleOpenAndClose = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.disabled) {
            return;
        }
        this._focus(true);
        this.isOpen = !this.isOpen;
        if (this.isOpen) {
            this.innerSearchText = '';
            this.updateFilteredData();
            this._focusSearchboxOrResultsElement();
            setTimeout((/**
             * @return {?}
             */
            function () {
                if (_this.option) {
                    /** @type {?} */
                    var option = _this.option instanceof Array ? _this.option[0] : _this.option;
                    _this.updateScrollFromOption(option);
                }
                else {
                    _this.resultsElement.scrollTop = 0;
                }
            }));
            this.open.emit(this);
        }
        else {
            this.close.emit(this);
        }
        if (this.isOpen && !this._clickDetection) {
            setTimeout((/**
             * @return {?}
             */
            function () {
                window.document.body.addEventListener('click', _this._clickDetectionFc, false);
                _this._clickDetection = true;
            }), timeout);
        }
        this._changeDetectorRef.markForCheck();
    };
    /**
     * @param {?} option
     * @param {?} defaut
     * @return {?}
     */
    Select2.prototype.hasTemplate = /**
     * @param {?} option
     * @param {?} defaut
     * @return {?}
     */
    function (option, defaut) {
        return this.templates instanceof TemplateRef
            || this.templates && this.templates[option.templateId] instanceof TemplateRef
            || this.templates && this.templates[defaut] instanceof TemplateRef;
    };
    /**
     * @param {?} option
     * @param {?} defaut
     * @return {?}
     */
    Select2.prototype.getTemplate = /**
     * @param {?} option
     * @param {?} defaut
     * @return {?}
     */
    function (option, defaut) {
        if (this.hasTemplate(option, defaut)) {
            return this.templates[option.templateId]
                || this.templates[defaut]
                || this.templates;
        }
        return undefined;
    };
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    Select2.prototype.testSelection = /**
     * @private
     * @param {?} option
     * @return {?}
     */
    function (option) {
        if (option.disabled) {
            return false;
        }
        if (!this.multiple ||
            !this.limitSelection ||
            Array.isArray(this._value) && this._value.length < this.limitSelection) {
            return true;
        }
        return false;
    };
    /**
     * @private
     * @param {?} value1
     * @param {?} value2
     * @return {?}
     */
    Select2.prototype.testValueChange = /**
     * @private
     * @param {?} value1
     * @param {?} value2
     * @return {?}
     */
    function (value1, value2) {
        var e_1, _a;
        if ((value1 === null || value1 === undefined) && (value2 === null || value2 === undefined) ||
            value1 === value2) {
            return false;
        }
        if (this.multiple
            && value1 && ((/** @type {?} */ (value1))).length
            && value2 && ((/** @type {?} */ (value2))).length
            && ((/** @type {?} */ (value1))).length === ((/** @type {?} */ (value2))).length) {
            try {
                for (var _b = tslib_1.__values(((/** @type {?} */ (value1)))), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var e1 = _c.value;
                    /** @type {?} */
                    var test = ((/** @type {?} */ (value2))).indexOf(e1) > -1;
                    if (!test) {
                        return true;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            return false;
        }
        return true;
    };
    /**
     * @private
     * @return {?}
     */
    Select2.prototype.updateFilteredData = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var result = _this.data;
            if (_this.multiple && _this.hideSelectedItems) {
                result = Select2Utils.getFilteredSelectedData(result, _this.option);
            }
            if (!_this.customSearchEnabled && _this.searchText && _this.searchText.length >= +_this.minCharForSearch) {
                result = Select2Utils.getFilteredData(result, _this.searchText, _this.editPattern);
            }
            if (Select2Utils.valueIsNotInFilteredData(result, _this.hoveringValue)) {
                _this.hoveringValue = Select2Utils.getFirstAvailableOption(result);
            }
            _this.filteredData = result;
            _this._changeDetectorRef.markForCheck();
        }));
    };
    /**
     * @private
     * @param {?} e
     * @return {?}
     */
    Select2.prototype.clickDetection = /**
     * @private
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (!this.ifParentContainsClass((/** @type {?} */ (e.target)), 'selection')) {
            if (this.isOpen && !this.ifParentContainsClass((/** @type {?} */ (e.target)), 'select2-dropdown')) {
                this.toggleOpenAndClose();
            }
            if (!this.ifParentContainsId((/** @type {?} */ (e.target)), this._id)) {
                this.clickExit();
            }
        }
        else if (this.isOpen && !this.ifParentContainsId((/** @type {?} */ (e.target)), this._id)) {
            this.toggleOpenAndClose();
            this.clickExit();
        }
    };
    /**
     * @private
     * @return {?}
     */
    Select2.prototype.clickExit = /**
     * @private
     * @return {?}
     */
    function () {
        this._focus(false);
        window.document.body.removeEventListener('click', this._clickDetectionFc);
        this._clickDetection = false;
    };
    /**
     * @private
     * @param {?} element
     * @param {?} cssClass
     * @return {?}
     */
    Select2.prototype.ifParentContainsClass = /**
     * @private
     * @param {?} element
     * @param {?} cssClass
     * @return {?}
     */
    function (element, cssClass) {
        return this.getParentElementByClass(element, cssClass) !== null;
    };
    /**
     * @private
     * @param {?} element
     * @param {?} id
     * @return {?}
     */
    Select2.prototype.ifParentContainsId = /**
     * @private
     * @param {?} element
     * @param {?} id
     * @return {?}
     */
    function (element, id) {
        return this.getParentElementById(element, id) !== null;
    };
    /**
     * @private
     * @param {?} element
     * @param {?} cssClass
     * @return {?}
     */
    Select2.prototype.getParentElementByClass = /**
     * @private
     * @param {?} element
     * @param {?} cssClass
     * @return {?}
     */
    function (element, cssClass) {
        if (this.containClasses(element, cssClass.trim().split(/\s+/))) {
            return element;
        }
        return element.parentElement
            ? this.getParentElementByClass(element.parentElement, cssClass)
            : null;
    };
    /**
     * @private
     * @param {?} element
     * @param {?} id
     * @return {?}
     */
    Select2.prototype.getParentElementById = /**
     * @private
     * @param {?} element
     * @param {?} id
     * @return {?}
     */
    function (element, id) {
        if (element.id === id) {
            return element;
        }
        return element.parentElement
            ? this.getParentElementById(element.parentElement, id)
            : null;
    };
    /**
     * @private
     * @param {?} element
     * @param {?} cssClasses
     * @return {?}
     */
    Select2.prototype.containClasses = /**
     * @private
     * @param {?} element
     * @param {?} cssClasses
     * @return {?}
     */
    function (element, cssClasses) {
        var e_2, _a;
        if (!element.classList) {
            return false;
        }
        try {
            for (var cssClasses_1 = tslib_1.__values(cssClasses), cssClasses_1_1 = cssClasses_1.next(); !cssClasses_1_1.done; cssClasses_1_1 = cssClasses_1.next()) {
                var cssClass = cssClasses_1_1.value;
                if (!element.classList.contains(cssClass)) {
                    return false;
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (cssClasses_1_1 && !cssClasses_1_1.done && (_a = cssClasses_1.return)) _a.call(cssClasses_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return true;
    };
    /**
     * @return {?}
     */
    Select2.prototype.focusin = /**
     * @return {?}
     */
    function () {
        if (this.disabled) {
            return;
        }
        this._focus(true);
    };
    /**
     * @return {?}
     */
    Select2.prototype.focusout = /**
     * @return {?}
     */
    function () {
        if (this.selectionElement && !this.selectionElement.classList.contains('select2-focused')) {
            this._focus(false);
            this._onTouched();
        }
    };
    /**
     * @private
     * @return {?}
     */
    Select2.prototype.moveUp = /**
     * @private
     * @return {?}
     */
    function () {
        this.updateScrollFromOption(Select2Utils.getPreviousOption(this.filteredData, this.hoveringValue));
    };
    /**
     * @private
     * @return {?}
     */
    Select2.prototype.moveDown = /**
     * @private
     * @return {?}
     */
    function () {
        this.updateScrollFromOption(Select2Utils.getNextOption(this.filteredData, this.hoveringValue));
    };
    /**
     * @private
     * @param {?} option
     * @return {?}
     */
    Select2.prototype.updateScrollFromOption = /**
     * @private
     * @param {?} option
     * @return {?}
     */
    function (option) {
        if (option) {
            this.hoveringValue = option.value;
            /** @type {?} */
            var domElement = this.results.find((/**
             * @param {?} r
             * @return {?}
             */
            function (r) { return r.nativeElement.innerText.trim() === option.label; }));
            if (domElement) {
                this.resultsElement.scrollTop = 0;
                /** @type {?} */
                var listClientRect = this.resultsElement.getBoundingClientRect();
                /** @type {?} */
                var optionClientRect = domElement.nativeElement.getBoundingClientRect();
                this.resultsElement.scrollTop = optionClientRect.top - listClientRect.top;
            }
        }
    };
    /**
     * @private
     * @return {?}
     */
    Select2.prototype.selectByEnter = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.hoveringValue) {
            /** @type {?} */
            var option = Select2Utils.getOptionByValue(this.data, this.hoveringValue);
            this.select(option);
        }
    };
    /**
     * @param {?} option
     * @return {?}
     */
    Select2.prototype.select = /**
     * @param {?} option
     * @return {?}
     */
    function (option) {
        /** @type {?} */
        var value;
        if (option !== null) {
            if (this.multiple) {
                /** @type {?} */
                var options = (/** @type {?} */ (this.option));
                /** @type {?} */
                var index = options.findIndex((/**
                 * @param {?} op
                 * @return {?}
                 */
                function (op) { return op.value === option.value; }));
                if (index === -1) {
                    options.push(option);
                }
                else {
                    options.splice(index, 1);
                }
                value = ((/** @type {?} */ (this.option))).map((/**
                 * @param {?} op
                 * @return {?}
                 */
                function (op) { return op.value; }));
            }
            else {
                this.option = option;
                if (this.isOpen) {
                    this.isOpen = false;
                    this.close.emit(this);
                    if (this.selectionElement) {
                        this.selectionElement.focus();
                    }
                }
                value = this.option.value;
            }
        }
        else {
            this.option = null;
        }
        if (this.multiple && this.hideSelectedItems) {
            this.updateFilteredData();
        }
        if (this._control) {
            this._onChange(value);
        }
        else {
            this._value = value;
        }
        this.update.emit({
            component: this,
            value: value,
            options: Array.isArray(this.option) ? this.option : (this.option ? [this.option] : null)
        });
    };
    /**
     * @param {?} e
     * @return {?}
     */
    Select2.prototype.keyDown = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (this._testKey(e, ['ArrowDown', 40])) {
            this.moveDown();
            e.preventDefault();
        }
        else if (this._testKey(e, ['ArrowUp', 38])) {
            this.moveUp();
            e.preventDefault();
        }
        else if (this._testKey(e, ['Enter', 13])) {
            this.selectByEnter();
            e.preventDefault();
        }
        else if (this._testKey(e, ['Escape', 'Tab', 9, 27]) && this.isOpen) {
            this.toggleOpenAndClose();
            this._focus(false);
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    Select2.prototype.openKey = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (this._testKey(e, ['ArrowDown', 'ArrowUp', 'Enter', 40, 38, 13])) {
            this.toggleOpenAndClose();
            e.preventDefault();
        }
        else if (this._testKey(e, ['Escape', 'Tab', 9, 27])) {
            this._focus(false);
            this._onTouched();
        }
    };
    /**
     * @param {?} _index
     * @param {?} item
     * @return {?}
     */
    Select2.prototype.trackBy = /**
     * @param {?} _index
     * @param {?} item
     * @return {?}
     */
    function (_index, item) {
        return item.value;
    };
    /**
     * @param {?} e
     * @return {?}
     */
    Select2.prototype.searchUpdate = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.searchText = ((/** @type {?} */ (e.target))).value;
        this.updateFilteredData();
    };
    /**
     * @param {?} option
     * @return {?}
     */
    Select2.prototype.isSelected = /**
     * @param {?} option
     * @return {?}
     */
    function (option) {
        return Select2Utils.isSelected(this.option, option, this.multiple);
    };
    /**
     * @param {?} option
     * @return {?}
     */
    Select2.prototype.isDisabled = /**
     * @param {?} option
     * @return {?}
     */
    function (option) {
        return option.disabled ? 'true' : 'false';
    };
    /**
     * @param {?} e
     * @param {?} option
     * @return {?}
     */
    Select2.prototype.removeSelection = /**
     * @param {?} e
     * @param {?} option
     * @return {?}
     */
    function (e, option) {
        Select2Utils.removeSelection(this.option, option);
        if (this.multiple && this.hideSelectedItems) {
            this.updateFilteredData();
        }
        /** @type {?} */
        var value = ((/** @type {?} */ (this.option))).map((/**
         * @param {?} op
         * @return {?}
         */
        function (op) { return op.value; }));
        if (this._control) {
            this._onChange(value);
        }
        else {
            this._value = value;
        }
        this.update.emit({
            component: this,
            value: value,
            options: Array.isArray(this.option) ? this.option : (this.option ? [this.option] : null)
        });
        e.preventDefault();
        e.stopPropagation();
        if (this.isOpen) {
            this._focusSearchboxOrResultsElement();
        }
    };
    /**
     * Sets the model value. Implemented as part of ControlValueAccessor.
     * @param value
     */
    /**
     * Sets the model value. Implemented as part of ControlValueAccessor.
     * @param {?} value
     * @return {?}
     */
    Select2.prototype.writeValue = /**
     * Sets the model value. Implemented as part of ControlValueAccessor.
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this._setSelectionByValue(value);
    };
    /**
     * Saves a callback function to be invoked when the select's value
     * changes from user input. Part of the ControlValueAccessor interface
     * required to integrate with Angular's core forms API.
     *
     * @param fn Callback to be triggered when the value changes.
     */
    /**
     * Saves a callback function to be invoked when the select's value
     * changes from user input. Part of the ControlValueAccessor interface
     * required to integrate with Angular's core forms API.
     *
     * @param {?} fn Callback to be triggered when the value changes.
     * @return {?}
     */
    Select2.prototype.registerOnChange = /**
     * Saves a callback function to be invoked when the select's value
     * changes from user input. Part of the ControlValueAccessor interface
     * required to integrate with Angular's core forms API.
     *
     * @param {?} fn Callback to be triggered when the value changes.
     * @return {?}
     */
    function (fn) {
        this._onChange = fn;
    };
    /**
     * Saves a callback function to be invoked when the select is blurred
     * by the user. Part of the ControlValueAccessor interface required
     * to integrate with Angular's core forms API.
     *
     * @param fn Callback to be triggered when the component has been touched.
     */
    /**
     * Saves a callback function to be invoked when the select is blurred
     * by the user. Part of the ControlValueAccessor interface required
     * to integrate with Angular's core forms API.
     *
     * @param {?} fn Callback to be triggered when the component has been touched.
     * @return {?}
     */
    Select2.prototype.registerOnTouched = /**
     * Saves a callback function to be invoked when the select is blurred
     * by the user. Part of the ControlValueAccessor interface required
     * to integrate with Angular's core forms API.
     *
     * @param {?} fn Callback to be triggered when the component has been touched.
     * @return {?}
     */
    function (fn) {
        this._onTouched = fn;
    };
    /**
     * Sets whether the component should be disabled.
     * Implemented as part of ControlValueAccessor.
     * @param isDisabled
     */
    /**
     * Sets whether the component should be disabled.
     * Implemented as part of ControlValueAccessor.
     * @param {?} isDisabled
     * @return {?}
     */
    Select2.prototype.setDisabledState = /**
     * Sets whether the component should be disabled.
     * Implemented as part of ControlValueAccessor.
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        this.disabled = isDisabled;
    };
    /**
     * @return {?}
     */
    Select2.prototype._isErrorState = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var isInvalid = this._control && this._control.invalid;
        /** @type {?} */
        var isTouched = this._control && this._control.touched;
        /** @type {?} */
        var isSubmitted = (this._parentFormGroup && this._parentFormGroup.submitted) ||
            (this._parentForm && this._parentForm.submitted);
        return !!(isInvalid && (isTouched || isSubmitted));
    };
    /**
     * @private
     * @param {?} event
     * @param {?=} refs
     * @return {?}
     */
    Select2.prototype._testKey = /**
     * @private
     * @param {?} event
     * @param {?=} refs
     * @return {?}
     */
    function (event, refs) {
        if (refs === void 0) { refs = []; }
        return this._isKey(this._getKey(event), refs);
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    Select2.prototype._getKey = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var code;
        if (event.key !== undefined) {
            code = event.key;
        }
        else if (event['keyIdentifier'] !== undefined) {
            code = event['keyIdentifier'];
        }
        else if (event['keyCode'] !== undefined) {
            code = event['keyCode'];
        }
        else {
            event.preventDefault();
        }
        return code;
    };
    /**
     * @private
     * @param {?} code
     * @param {?=} refs
     * @return {?}
     */
    Select2.prototype._isKey = /**
     * @private
     * @param {?} code
     * @param {?=} refs
     * @return {?}
     */
    function (code, refs) {
        if (refs === void 0) { refs = []; }
        return refs && refs.length > 0
            ? refs.indexOf(code) !== -1
            : false;
    };
    /**
     * Sets the selected option based on a value. If no option can be
     * found with the designated value, the select trigger is cleared.
     */
    /**
     * Sets the selected option based on a value. If no option can be
     * found with the designated value, the select trigger is cleared.
     * @private
     * @param {?} value
     * @return {?}
     */
    Select2.prototype._setSelectionByValue = /**
     * Sets the selected option based on a value. If no option can be
     * found with the designated value, the select trigger is cleared.
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        var _this = this;
        if (this.option || (value !== undefined && value !== null)) {
            /** @type {?} */
            var isArray = Array.isArray(value);
            if (this.multiple && value && !isArray) {
                throw new Error('Non array value.');
            }
            else if (this.data) {
                if (this.multiple) {
                    this.option = []; // if value is null, then empty option and return
                    if (isArray) {
                        // value is not null. Preselect value
                        /** @type {?} */
                        var selectedValues = Select2Utils.getOptionsByValue(this.data, value, this.multiple);
                        selectedValues.map((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) { return _this.select(item); }));
                    }
                }
                else {
                    this.select(Select2Utils.getOptionByValue(this.data, value));
                }
            }
            else if (this._control) {
                this._control.viewToModelUpdate(value);
            }
            this._changeDetectorRef.markForCheck();
        }
    };
    /** Does some manual dirty checking on the native input `value` property. */
    /**
     * Does some manual dirty checking on the native input `value` property.
     * @private
     * @return {?}
     */
    Select2.prototype._dirtyCheckNativeValue = /**
     * Does some manual dirty checking on the native input `value` property.
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var newValue = this.value;
        if (this._previousNativeValue !== newValue) {
            this._previousNativeValue = newValue;
            this._stateChanges.next();
        }
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    Select2.prototype._coerceBooleanProperty = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return value != null && "" + value !== 'false';
    };
    /**
     * @private
     * @return {?}
     */
    Select2.prototype._focusSearchboxOrResultsElement = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.isSearchboxHidden) {
            if (this.searchInputElement) {
                this.searchInputElement.focus();
            }
        }
        else {
            if (this.resultsElement) {
                this.resultsElement.focus();
            }
        }
    };
    /**
     * @private
     * @param {?} state
     * @return {?}
     */
    Select2.prototype._focus = /**
     * @private
     * @param {?} state
     * @return {?}
     */
    function (state) {
        if (!state && this.focused) {
            this.focused = state;
            this.blur.emit(this);
        }
        else if (state && !this.focused) {
            this.focused = state;
            this.focus.emit(this);
        }
    };
    Select2.decorators = [
        { type: Component, args: [{
                    selector: 'select2',
                    template: "<div class=\"select2-label\"\r\n     (click)=\"toggleOpenAndClose()\">\r\n    <ng-content select=\"select2-label\"></ng-content><span *ngIf=\"required\"\r\n          class=\"select2-required\"></span>\r\n</div>\r\n<div class=\"select2 select2-container select2-container--default select2-container--focus\"\r\n     [class.select2-container--below]=\"!select2above\"\r\n     [class.select2-container--above]=\"select2above\"\r\n     [class.select2-container--open]=\"isOpen\"\r\n     [class.select2-container--disabled]=\"disabled\">\r\n    <div class=\"selection\"\r\n         #selection\r\n         [attr.tabindex]=\"!this.isOpen ? tabIndex : '-1'\"\r\n         (click)=\"toggleOpenAndClose()\"\r\n         (focus)=\"focusin()\"\r\n         (blur)=\"focusout()\"\r\n         (keydown)=\"openKey($event)\"\r\n         [class.select2-focused]=\"focused\">\r\n        <div class=\"select2-selection\"\r\n             [class.select2-selection--multiple]=\"multiple\"\r\n             [class.select2-selection--single]=\"!multiple\"\r\n             role=\"combobox\">\r\n            <span *ngIf=\"!multiple\"\r\n                  class=\"select2-selection__rendered\"\r\n                  [title]=\"select2Option ? select2Option.label : ''\">\r\n                <span *ngIf=\"!select2Option\">&nbsp;</span>\r\n                <span *ngIf=\"select2Option\"\r\n                      [innerHTML]=\"select2Option.label\"></span>\r\n                <span [class.select2-selection__placeholder__option]=\"option\"\r\n                      class=\"select2-selection__placeholder\">{{placeholder}}</span>\r\n            </span>\r\n            <span *ngIf=\"!multiple\"\r\n                  class=\"select2-selection__arrow\"\r\n                  role=\"presentation\">\r\n            </span>\r\n            <ul *ngIf=\"multiple\"\r\n                class=\"select2-selection__rendered\">\r\n                <span [class.select2-selection__placeholder__option]=\"select2Options?.length > 0\"\r\n                      class=\"select2-selection__placeholder\">{{placeholder}}</span>\r\n                <li *ngFor=\"let op of option; trackBy: trackBy\"\r\n                    class=\"select2-selection__choice\"\r\n                    [title]=\"op.label\">\r\n                    <span (click)=\"removeSelection($event, op)\"\r\n                          class=\"select2-selection__choice__remove\"\r\n                          role=\"presentation\">\u00D7</span>\r\n                    <span [innerHTML]=\"op.label\"></span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"select2-container select2-container--default select2-container-dropdown\"\r\n         [class.select2-container--open]=\"isOpen\">\r\n        <div class=\"select2-dropdown\"\r\n             [class.select2-dropdown--below]=\"!select2above\"\r\n             [class.select2-dropdown--above]=\"select2above\">\r\n            <div class=\"select2-search select2-search--dropdown\"\r\n                 [class.select2-search--hide]=\"hideSearch()\">\r\n                <input #searchInput\r\n                       [id]=\"id + '-search-field'\"\r\n                       [value]=\"searchText\"\r\n                       (keydown)=\"keyDown($event)\"\r\n                       (keyup)=\"searchUpdate($event)\"\r\n                       (change)=\"prevChange($event)\"\r\n                       class=\"select2-search__field\"\r\n                       type=\"search\"\r\n                       role=\"textbox\"\r\n                       autocomplete=\"off\"\r\n                       autocorrect=\"off\"\r\n                       autocapitalize=\"off\"\r\n                       spellcheck=\"false\"\r\n                       [attr.tabindex]=\"this.isOpen ? tabIndex : '-1'\">\r\n            </div>\r\n            <div class=\"select2-results\">\r\n                <ul #results\r\n                    class=\"select2-results__options\"\r\n                    [style.max-height]=\"resultMaxHeight\"\r\n                    role=\"tree\"\r\n                    tabindex=\"-1\"\r\n                    (keydown)=\"keyDown($event)\">\r\n                    <ng-container *ngFor=\"let groupOrOption of filteredData; index as i; trackBy:trackBy\">\r\n                        <li *ngIf=\"groupOrOption.options\"\r\n                            class=\"select2-results__option\"\r\n                            role=\"group\">\r\n                            <strong *ngIf=\"!hasTemplate(groupOrOption, 'group'); else optGroup\"\r\n                                    [attr.class]=\"'select2-results__group' + (groupOrOption.classes ? ' ' + groupOrOption.classes : '')\"\r\n                                    [innerHTML]=\"groupOrOption.label\"></strong>\r\n                            <ng-template #optGroup>\r\n                                <ng-container\r\n                                              *ngTemplateOutlet=\"getTemplate(groupOrOption, 'group'); context:  groupOrOption\">\r\n                                </ng-container>\r\n                            </ng-template>\r\n\r\n                            <ul class=\"select2-results__options select2-results__options--nested\">\r\n                                <li *ngFor=\"let option of groupOrOption.options; index as j; trackBy:trackBy\"\r\n                                    #result\r\n                                    [id]=\"option.id || id + '-option-' + i + '-' + j\"\r\n                                    [class]=\"getOptionStyle(option)\"\r\n                                    role=\"treeitem\"\r\n                                    [attr.aria-selected]=\"isSelected(option)\"\r\n                                    [attr.aria-disabled]=\"isDisabled(option)\"\r\n                                    (mouseenter)=\"mouseenter(option)\"\r\n                                    (click)=\"click(option)\">\r\n                                    <div *ngIf=\"!hasTemplate(option, 'option'); else liGroup\"\r\n                                         class=\"select2-label-content\"\r\n                                         [innerHTML]=\"option.label\"></div>\r\n                                    <ng-template #liGroup>\r\n                                        <ng-container\r\n                                                      *ngTemplateOutlet=\"getTemplate(option, 'option'); context: option\">\r\n                                        </ng-container>\r\n                                    </ng-template>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                        <li *ngIf=\"!groupOrOption.options\"\r\n                            #result\r\n                            [id]=\"groupOrOption.id || id + '-option-' + i\"\r\n                            [class]=\"getOptionStyle(groupOrOption)\"\r\n                            role=\"treeitem\"\r\n                            [attr.aria-selected]=\"isSelected(groupOrOption)\"\r\n                            [attr.aria-disabled]=\"isDisabled(groupOrOption)\"\r\n                            (mouseenter)=\"mouseenter(groupOrOption)\"\r\n                            (click)=\"click(groupOrOption)\">\r\n                            <div *ngIf=\"!hasTemplate(groupOrOption, 'option'); else li\"\r\n                                 [innerHTML]=\"groupOrOption.label\"\r\n                                 class=\"select2-label-content\"></div>\r\n                            <ng-template #li>\r\n                                <ng-container\r\n                                              *ngTemplateOutlet=\"getTemplate(groupOrOption, 'option'); context:  groupOrOption\">\r\n                                </ng-container>\r\n                            </ng-template>\r\n                        </li>\r\n                    </ng-container>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"select2-subscript-wrapper\">\r\n        <ng-content select=\"select2-hint\"></ng-content>\r\n    </div>\r\n</div>\r\n",
                    styles: [".select2-label{color:#000;color:var(--select2-label-text-color,#000)}.select2-container{box-sizing:border-box;display:inline-block;margin:0;position:relative;vertical-align:middle;width:100%}.select2-container .select2-container-dropdown{position:absolute;width:0;opacity:0}.select2-container .select2-selection--single{box-sizing:border-box;cursor:pointer;display:block;height:28px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.select2-container .select2-selection--single .select2-selection__rendered{display:block;padding:0 0 0 8px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;flex:1 1 auto}.select2-container .select2-selection--single .select2-selection__clear{position:relative}.select2-container .select2-selection--multiple{box-sizing:border-box;cursor:pointer;display:block;min-height:32px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.select2-container .select2-selection--multiple .select2-selection__rendered{display:inline-block;overflow:hidden;padding-left:8px;text-overflow:ellipsis;white-space:nowrap}.select2-container .select2-search--inline{float:left}.select2-container .select2-search--inline .select2-search__field{box-sizing:border-box;border:none;font-size:100%;margin-top:5px;padding:0}.select2-container .select2-search--inline .select2-search__field::-webkit-search-cancel-button{-webkit-appearance:none}.select2-dropdown{background:#fff;background:var(--select2-dropdown-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-dropdown-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);box-sizing:border-box;display:block;position:absolute;width:100%;z-index:1051;height:0;overflow:hidden}.select2-dropdown .select2-label-content{display:contents}.select2-results{display:block}.select2-results__options{list-style:none;margin:0;padding:0}.select2-results__option{padding:6px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:#000;color:var(--select2-option-text-color,#000)}.select2-results__option[aria-selected]{cursor:pointer}.select2-container.select2-container-dropdown.select2-container--open{width:100%;opacity:1}.select2-container--open .select2-dropdown{overflow:auto;height:auto}.select2-container--open .select2-dropdown--above{border-bottom:none;border-bottom-left-radius:0;border-bottom-right-radius:0;bottom:27px;display:flex;flex-direction:column-reverse}.select2-container--open .select2-dropdown--below{border-top:none;border-top-left-radius:0;border-top-right-radius:0}.select2-search--dropdown{display:block;padding:4px}.select2-search--dropdown .select2-search__field{padding:4px;width:100%;box-sizing:border-box}.select2-search--dropdown .select2-search__field::-webkit-search-cancel-button{-webkit-appearance:none}.select2-search--dropdown.select2-search--hide{display:none}.select2-close-mask{border:0;margin:0;padding:0;display:block;position:fixed;left:0;top:0;min-height:100%;min-width:100%;height:auto;width:auto;opacity:0;z-index:99;background:#fff}.select2-required::before{content:'*';color:red;color:var(--select2-required-color,red)}.select2-hidden-accessible{border:0!important;clip:rect(0 0 0 0)!important;height:1px!important;margin:-1px!important;overflow:hidden!important;padding:0!important;position:absolute!important;width:1px!important}.select2-container--default .select2-selection--single{background:#fff;background:var(--select2-selection-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-selection-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);display:flex}.select2-container--default .select2-selection--single .select2-selection__rendered{color:#444;color:var(--select2-selection-text-color,#444);line-height:28px}.select2-container--default .select2-selection--single .select2-selection__clear{cursor:pointer;float:right;font-weight:700}.select2-container--default .select2-selection--single .select2-selection__placeholder{color:#999;color:var(--select2-placeholder-color,#999)}.select2-container--default .select2-selection--single .select2-selection__placeholder__option{display:none}.select2-container--default .select2-selection--single .select2-selection__arrow{display:flex;width:20px;align-items:center;justify-content:center}.select2-container--default .select2-selection--single .select2-selection__arrow::before{content:' ';border-color:#888 transparent;border-color:var(--select2-arrow-color,#888) transparent;border-style:solid;border-width:5px 4px 0;height:0;width:0}.select2-container--default.select2-container--disabled .select2-selection--single{background:#eee;background:var(--select2-selection-disabled-background,#eee);cursor:default}.select2-container--default.select2-container--disabled .select2-selection--single .select2-selection__clear{display:none}.select2-container--default.select2-container--open .select2-selection--single .select2-selection__arrow::before{border-color:transparent transparent #888;border-color:transparent transparent var(--select2-arrow-color,#888);border-width:0 4px 5px}.select2-container--default .select2-selection--multiple{background:#fff;background:var(--select2-selection-background,#fff);border:1px solid #aaa;border:1px solid var(--select2-selection-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);cursor:text}.select2-container--default .select2-selection--multiple .select2-selection__rendered{flex:1 1 auto;box-sizing:border-box;list-style:none;margin:0;padding:0 5px;width:100%}.select2-container--default .select2-selection--multiple .select2-selection__rendered li{list-style:none}.select2-container--default .select2-selection--multiple .select2-selection__placeholder{color:#999;color:var(--select2-placeholder-color,#999);margin-top:5px;float:left}.select2-container--default .select2-selection--multiple .select2-selection__placeholder__option{display:none}.select2-container--default .select2-selection--multiple .select2-selection__clear{cursor:pointer;float:right;font-weight:700;margin-top:5px;margin-right:10px}.select2-container--default .select2-selection--multiple .select2-selection__choice{color:#000;color:var(--select2-selection-choice-text-color,#000);background:#e4e4e4;background:var(--select2-selection-choice-background,#e4e4e4);border:1px solid #aaa;border:1px solid var(--select2-selection-choice-border-color,#aaa);border-radius:4px;border-radius:var(--select2-selection-border-radius,4px);cursor:default;float:left;margin-right:5px;margin-top:5px;padding:0 5px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove{color:#999;color:var(--select2-selection-choice-close-color,#999);cursor:pointer;display:inline-block;font-weight:700;margin-right:2px}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#333;color:var(--select2-selection-choice-hover-close-color,#333)}.select2-container--default.select2-container--focused .select2-selection--multiple,.select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--multiple,.select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--single{border:1px solid #000;border:solid var(--select2-selection-focus-border-color,#000) 1px;outline:0}.select2-container--default.select2-container--disabled .select2-selection--multiple{background:#eee;background:var(--select2-selection-disabled-background,#eee);cursor:default}.select2-container--default.select2-container--disabled .select2-selection__choice__remove{display:none}.select2-container--default.select2-container--open.select2-container--above .select2-selection--multiple,.select2-container--default.select2-container--open.select2-container--above .select2-selection--single{border-top-left-radius:0;border-top-right-radius:0}.select2-container--default.select2-container--open.select2-container--below .select2-selection--multiple,.select2-container--default.select2-container--open.select2-container--below .select2-selection--single{border-bottom-left-radius:0;border-bottom-right-radius:0}.select2-container--default .select2-search--dropdown .select2-search__field{border:1px solid #aaa;border:1px solid var(--select2-search-border-color,#aaa);background:#fff;background:1px solid var(--select2-search-background,#fff);border-radius:0;border-radius:var(--select2-search-border-radius,0)}.select2-container--default .select2-search--inline .select2-search__field{background:0 0;border:none;outline:0;box-shadow:none;-webkit-appearance:textfield}.select2-container--default .select2-results>.select2-results__options{overflow-y:auto}.select2-container--default .select2-results__option[role=group]{padding:0}.select2-container--default .select2-results__option[aria-disabled=true]{color:#999;color:var(--select2-option-disabled-text-color,#999);background:0 0;background:var(--select2-option-disabled-background,transparent)}.select2-container--default .select2-results__option[aria-selected=true]{color:#000;color:var(--select2-option-selected-text-color,#000);background:#ddd;background:var(--select2-option-selected-background,#ddd)}.select2-container--default .select2-results__option .select2-results__option{padding-left:1em}.select2-container--default .select2-results__option .select2-results__option .select2-results__group{padding-left:0}.select2-container--default .select2-results__option .select2-results__option .select2-results__option{margin-left:-1em;padding-left:2em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-2em;padding-left:3em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-3em;padding-left:4em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-4em;padding-left:5em}.select2-container--default .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option .select2-results__option{margin-left:-5em;padding-left:6em}.select2-container--default .select2-results__option--highlighted[aria-selected]{background:#5897fb;background:var(--select2-option-highlighted-background,#5897fb);color:#fff;color:var(--select2-option-highlighted-text-color,#fff)}.select2-container--default .select2-results__group{cursor:default;display:block;padding:6px;color:gray;color:var(--select2-option-group-text-color,gray);background:0 0;background:var(--select2-option-group-background,transparent)}:host.nostyle .select2-dropdown{border-color:transparent}:host.nostyle .select2-selection--multiple,:host.nostyle .select2-selection--single{background:0 0;border-color:transparent}:host.nostyle .select2-container--default .select2-focused .select2-selection--multiple,:host.nostyle .select2-container--default .select2-focused .select2-selection--single,:host.nostyle .select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--multiple,:host.nostyle .select2-container--default:not(.select2-container--open) .select2-focused .select2-selection--single{background:0 0;border-color:transparent}:host.material{display:inline-block;width:300px}:host.material>.select2-container{padding-bottom:1.29688em;vertical-align:inherit}:host.material>.select2-container .selection{padding:.4375em 0;border-top:.84375em solid transparent;display:inline-flex;align-items:baseline;width:100%;height:auto}:host.material .select2-container--default .select2-selection--multiple,:host.material .select2-container--default .select2-selection--single{width:100%;border:0;border-radius:0;height:24px;box-sizing:border-box}:host.material .select2-container--default .select2-selection--multiple::before,:host.material .select2-container--default .select2-selection--single::before{content:' ';display:block;position:absolute;bottom:1.65em;background:#ddd;background:var(--select2-material-underline,#ddd);height:1px;width:100%}:host.material .select2-container--default .select2-selection--multiple::after,:host.material .select2-container--default .select2-selection--single::after{content:' ';display:block;position:absolute;bottom:1.63em;background:#5a419e;background:var(--select2-material-underline-active,#5a419e);height:2px;width:0%;left:50%;transition:none}:host.material .select2-container--default .select2-selection--multiple .select2-selection__rendered,:host.material .select2-container--default .select2-selection--single .select2-selection__rendered{padding-left:1px;line-height:inherit}:host.material .select2-container--default .select2-selection--multiple .select2-selection__placeholder,:host.material .select2-container--default .select2-selection--single .select2-selection__placeholder{display:block;color:rgba(0,0,0,.38);color:var(--select2-material-placeholder-color,rgba(0,0,0,.38));transition:transform .3s;position:absolute;transform-origin:0 21px;left:0;top:20px}:host.material .select2-container--default .select2-container--open{left:0;bottom:1.6em}:host.material .select2-container--default .select2-selection__placeholder__option{transform:translateY(-1.5em) scale(.75) perspective(100px) translateZ(.001px);width:133.33333%}:host.material .select2-container--default .select2-selection__arrow{top:20px}:host.material .select2-container--default .select2-focused .select2-selection--multiple::after,:host.material .select2-container--default .select2-focused .select2-selection--single::after,:host.material .select2-container--default.select2-container--open .select2-selection--multiple::after,:host.material .select2-container--default.select2-container--open .select2-selection--single::after{transition:width .3s cubic-bezier(.12,1,.77,1),left .3s cubic-bezier(.12,1,.77,1);width:100%;left:0}:host.material .select2-container--default .select2-dropdown{border-radius:0;border:0;box-shadow:0 5px 5px rgba(0,0,0,.5)}:host.material .select2-container--default .select2-results__option--highlighted[aria-selected],:host.material .select2-container--default .select2-results__option[aria-selected=true]{background:rgba(0,0,0,.04);background:var(--select2-material-option-selected-background,rgba(0,0,0,.04));color:#000;color:var(--select2-material-option-highlighted-text-color,#000)}:host.material .select2-container--default .select2-results__option[aria-selected=true]{color:#ff5722;color:var(--select2-material-option-selected-text-color,#ff5722)}:host.material .select2-container--default.select2-container--disabled .select2-selection--multiple,:host.material .select2-container--default.select2-container--disabled .select2-selection--single{background:0 0}:host.material .select2-container--default.select2-container--disabled .select2-selection--multiple::before,:host.material .select2-container--default.select2-container--disabled .select2-selection--single::before{background:linear-gradient(to right,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0);background:var(--select2-material-underline-disabled,linear-gradient(to right,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0));background-size:4px 1px;background-repeat:repeat-x;background-position:0 bottom}:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--multiple::after,:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--multiple::before,:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--single::after,:host.material.ng-invalid.ng-touched .select2-container--default .select2-selection--single::before{background:red;background:var(--select2-material-underline-invalid,red)}:host.material:not(.select2-container--open) .select2-focused .select2-selection--multiple,:host.material:not(.select2-container--open) .select2-focused .select2-selection--single{border:0}:host.material .select2-subscript-wrapper{position:absolute;top:calc(100% - 1.72917em);font-size:75%;color:#888;color:var(--select2-hint-text-color,#888)}@supports (-moz-appearance:none){select2.material .select2-container--default .select2-selection--multiple,select2.material .select2-container--default .select2-selection--single{height:26px}}@supports (-ms-scroll-limit:0){select2.material .select2-container--default .select2-selection--multiple,select2.material .select2-container--default .select2-selection--single{height:25px}}"]
                }] }
    ];
    /** @nocollapse */
    Select2.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: NgForm, decorators: [{ type: Optional }] },
        { type: FormGroupDirective, decorators: [{ type: Optional }] },
        { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },
        { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }
    ]; };
    Select2.propDecorators = {
        data: [{ type: Input }],
        minCharForSearch: [{ type: Input }],
        displaySearchStatus: [{ type: Input }],
        placeholder: [{ type: Input }],
        customSearchEnabled: [{ type: Input }],
        multiple: [{ type: Input }],
        limitSelection: [{ type: Input }],
        listPosition: [{ type: Input }],
        material: [{ type: Input }],
        noStyle: [{ type: Input }],
        editPattern: [{ type: Input }],
        templates: [{ type: Input }],
        resultMaxHeight: [{ type: Input }],
        update: [{ type: Output }],
        open: [{ type: Output }],
        close: [{ type: Output }],
        focus: [{ type: Output }],
        blur: [{ type: Output }],
        search: [{ type: Output }],
        minCountForSearch: [{ type: Input }],
        id: [{ type: Input }, { type: HostBinding, args: ['id',] }],
        required: [{ type: Input }],
        disabled: [{ type: Input }],
        hideSelectedItems: [{ type: Input }],
        readonly: [{ type: Input }],
        value: [{ type: Input }],
        tabIndex: [{ type: Input }],
        ariaInvalid: [{ type: HostBinding, args: ['attr.aria-invalid',] }],
        classMaterial: [{ type: HostBinding, args: ['class.material',] }],
        classNostyle: [{ type: HostBinding, args: ['class.nostyle',] }],
        select2above: [{ type: HostBinding, args: ['class.select2-above',] }],
        selection: [{ type: ViewChild, args: ['selection',] }],
        resultContainer: [{ type: ViewChild, args: ['results',] }],
        results: [{ type: ViewChildren, args: ['result',] }],
        searchInput: [{ type: ViewChild, args: ['searchInput',] }]
    };
    return Select2;
}());
export { Select2 };
if (false) {
    /**
     * data of options & optiongrps
     * @type {?}
     */
    Select2.prototype.data;
    /** @type {?} */
    Select2.prototype.minCharForSearch;
    /** @type {?} */
    Select2.prototype.displaySearchStatus;
    /** @type {?} */
    Select2.prototype.placeholder;
    /** @type {?} */
    Select2.prototype.customSearchEnabled;
    /** @type {?} */
    Select2.prototype.multiple;
    /** @type {?} */
    Select2.prototype.limitSelection;
    /** @type {?} */
    Select2.prototype.listPosition;
    /**
     * use the material style
     * @type {?}
     */
    Select2.prototype.material;
    /**
     * use the material style
     * @type {?}
     */
    Select2.prototype.noStyle;
    /**
     * use it for change the pattern of the filter search
     * @type {?}
     */
    Select2.prototype.editPattern;
    /**
     * template for formating
     * @type {?}
     */
    Select2.prototype.templates;
    /**
     * the max height of the results container when opening the select
     * @type {?}
     */
    Select2.prototype.resultMaxHeight;
    /** @type {?} */
    Select2.prototype.update;
    /** @type {?} */
    Select2.prototype.open;
    /** @type {?} */
    Select2.prototype.close;
    /** @type {?} */
    Select2.prototype.focus;
    /** @type {?} */
    Select2.prototype.blur;
    /** @type {?} */
    Select2.prototype.search;
    /** @type {?} */
    Select2.prototype.option;
    /** @type {?} */
    Select2.prototype.isOpen;
    /** @type {?} */
    Select2.prototype.searchStyle;
    /**
     * Whether the element is focused or not.
     * @type {?}
     */
    Select2.prototype.focused;
    /** @type {?} */
    Select2.prototype.filteredData;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._minCountForSearch;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.selection;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.resultContainer;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.results;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.searchInput;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.hoveringValue;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.innerSearchText;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.isSearchboxHidden;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.selectionElement;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.searchInputElement;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype.resultsElement;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._stateChanges;
    /**
     * Tab index for the element.
     * @type {?}
     * @private
     */
    Select2.prototype._tabIndex;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._disabled;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._required;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._readonly;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._hideSelectedItems;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._clickDetection;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._clickDetectionFc;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._id;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._uid;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._value;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._previousNativeValue;
    /**
     * View -> model callback called when select has been touched
     * @type {?}
     * @private
     */
    Select2.prototype._onTouched;
    /**
     * View -> model callback called when value changes
     * @type {?}
     * @private
     */
    Select2.prototype._onChange;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._changeDetectorRef;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._parentForm;
    /**
     * @type {?}
     * @private
     */
    Select2.prototype._parentFormGroup;
    /** @type {?} */
    Select2.prototype._control;
}
//# sourceMappingURL=data:application/json;base64,