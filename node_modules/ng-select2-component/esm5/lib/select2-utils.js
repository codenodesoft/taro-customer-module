/**
 * @fileoverview added by tsickle
 * Generated from: lib/select2-utils.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/**
 * @record
 */
export function Select2Group() { }
if (false) {
    /**
     * label of group
     * @type {?}
     */
    Select2Group.prototype.label;
    /**
     * options list
     * @type {?}
     */
    Select2Group.prototype.options;
    /**
     * add classes
     * @type {?|undefined}
     */
    Select2Group.prototype.classes;
    /**
     * template id
     * @type {?|undefined}
     */
    Select2Group.prototype.templateId;
    /**
     * template data
     * @type {?|undefined}
     */
    Select2Group.prototype.data;
}
/**
 * @record
 */
export function Select2Option() { }
if (false) {
    /**
     * value
     * @type {?}
     */
    Select2Option.prototype.value;
    /**
     * label of option
     * @type {?}
     */
    Select2Option.prototype.label;
    /**
     * no selectable is disabled
     * @type {?|undefined}
     */
    Select2Option.prototype.disabled;
    /**
     * for identification
     * @type {?|undefined}
     */
    Select2Option.prototype.id;
    /**
     * add classes
     * @type {?|undefined}
     */
    Select2Option.prototype.classes;
    /**
     * template id
     * @type {?|undefined}
     */
    Select2Option.prototype.templateId;
    /**
     * template data
     * @type {?|undefined}
     */
    Select2Option.prototype.data;
}
/**
 * @record
 * @template U
 */
export function Select2UpdateEvent() { }
if (false) {
    /** @type {?} */
    Select2UpdateEvent.prototype.component;
    /** @type {?} */
    Select2UpdateEvent.prototype.value;
    /** @type {?} */
    Select2UpdateEvent.prototype.options;
}
/**
 * @record
 * @template U
 */
export function Select2SearchEvent() { }
if (false) {
    /** @type {?} */
    Select2SearchEvent.prototype.component;
    /** @type {?} */
    Select2SearchEvent.prototype.value;
    /** @type {?} */
    Select2SearchEvent.prototype.search;
}
/** @type {?} */
export var timeout = 200;
/** @type {?} */
export var unicodePatterns = [
    { l: 'a', s: /[ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ]/gi },
    { l: 'aa', s: /ꜳ/gi },
    { l: 'ae', s: /[æǽǣ]/gi },
    { l: 'ao', s: /ꜵ/gi },
    { l: 'au', s: /ꜷ/gi },
    { l: 'av', s: /[ꜹꜻ]/gi },
    { l: 'ay', s: /ꜽ/gi },
    { l: 'b', s: /[ⓑｂḃḅḇƀƃɓ]/gi },
    { l: 'c', s: /[ⓒｃćĉċčçḉƈȼꜿↄ]/gi },
    { l: 'd', s: /[ⓓｄḋďḍḑḓḏđƌɖɗꝺ]/gi },
    { l: 'dz', s: /[ǳǆ]/gi },
    { l: 'e', s: /[ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ]/gi },
    { l: 'f', s: /[ⓕｆḟƒꝼ]/gi },
    { l: 'g', s: /[ⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ]/gi },
    { l: 'h', s: /[ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ]/gi },
    { l: 'hv', s: /ƕ/gi },
    { l: 'i', s: /[ⓘｉìíîĩīĭİïḯỉǐȉȋịįḭɨı]/gi },
    { l: 'j', s: /[ⓙｊĵǰɉ]/gi },
    { l: 'k', s: /[ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ]/gi },
    { l: 'l', s: /[ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇꝆ]/gi },
    { l: 'lj', s: /ǉ/gi },
    { l: 'm', s: /[ⓜｍḿṁṃɱɯ]/gi },
    { l: 'n', s: /[ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ]/gi },
    { l: 'nj', s: /ǌ/gi },
    { l: 'o', s: /[ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔƟꝋꝍɵ]/gi },
    { l: 'oi', s: /ƣ/gi },
    { l: 'oe', s: /œ/gi },
    { l: 'oo', s: /ꝏ/gi },
    { l: 'ou', s: /ȣ/gi },
    { l: 'p', s: /[ⓟｐṕṗƥᵽꝑꝓꝕ]/gi },
    { l: 'q', s: /[ⓠｑɋꝗꝙ]/gi },
    { l: 'r', s: /[ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ]/gi },
    { l: 's', s: /[ⓢｓßẞśṥŝṡšṧṣṩșşȿꞩꞅẛ]/gi },
    { l: 't', s: /[ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ]/gi },
    { l: 'tz', s: /ꜩ/gi },
    { l: 'u', s: /[ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ]/gi },
    { l: 'v', s: /[ⓥｖṽṿʋꝟʌ]/gi },
    { l: 'vy', s: /ꝡ/gi },
    { l: 'w', s: /[ⓦｗẁẃŵẇẅẘẉⱳ]/gi },
    { l: 'x', s: /[ⓧｘẋẍ]/gi },
    { l: 'y', s: /[ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ]/gi },
    { l: 'z', s: /[ⓩｚźẑżžẓẕƶȥɀⱬꝣ]/gi }
];
/** @type {?} */
var defaultMinCountForSearch = 6;
var Select2Utils = /** @class */ (function () {
    function Select2Utils() {
    }
    /**
     * @param {?} data
     * @param {?} value
     * @return {?}
     */
    Select2Utils.getOptionByValue = /**
     * @param {?} data
     * @param {?} value
     * @return {?}
     */
    function (data, value) {
        var e_1, _a, e_2, _b;
        if (Array.isArray(data)) {
            try {
                for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
                    var groupOrOption = data_1_1.value;
                    /** @type {?} */
                    var options = ((/** @type {?} */ (groupOrOption))).options;
                    if (options) {
                        try {
                            for (var options_1 = tslib_1.__values(options), options_1_1 = options_1.next(); !options_1_1.done; options_1_1 = options_1.next()) {
                                var option = options_1_1.value;
                                if (option.value === value) {
                                    return option;
                                }
                            }
                        }
                        catch (e_2_1) { e_2 = { error: e_2_1 }; }
                        finally {
                            try {
                                if (options_1_1 && !options_1_1.done && (_b = options_1.return)) _b.call(options_1);
                            }
                            finally { if (e_2) throw e_2.error; }
                        }
                    }
                    else {
                        if (((/** @type {?} */ (groupOrOption))).value === value) {
                            return (/** @type {?} */ (groupOrOption));
                        }
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        return null;
    };
    /**
     * @param {?} data
     * @param {?} value
     * @param {?} multiple
     * @return {?}
     */
    Select2Utils.getOptionsByValue = /**
     * @param {?} data
     * @param {?} value
     * @param {?} multiple
     * @return {?}
     */
    function (data, value, multiple) {
        var e_3, _a;
        if (multiple) {
            /** @type {?} */
            var values = Array.isArray(value) ? value : [];
            /** @type {?} */
            var result = [];
            try {
                for (var values_1 = tslib_1.__values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {
                    var v = values_1_1.value;
                    /** @type {?} */
                    var option = Select2Utils.getOptionByValue(data, v);
                    if (option) {
                        result.push(option);
                    }
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);
                }
                finally { if (e_3) throw e_3.error; }
            }
            return result;
        }
        return Select2Utils.getOptionByValue(data, (/** @type {?} */ (value)));
    };
    /**
     * @param {?} data
     * @return {?}
     */
    Select2Utils.getFirstAvailableOption = /**
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var e_4, _a, e_5, _b;
        if (Array.isArray(data)) {
            try {
                for (var data_2 = tslib_1.__values(data), data_2_1 = data_2.next(); !data_2_1.done; data_2_1 = data_2.next()) {
                    var groupOrOption = data_2_1.value;
                    /** @type {?} */
                    var options = ((/** @type {?} */ (groupOrOption))).options;
                    if (options) {
                        try {
                            for (var options_2 = tslib_1.__values(options), options_2_1 = options_2.next(); !options_2_1.done; options_2_1 = options_2.next()) {
                                var option = options_2_1.value;
                                if (!option.disabled) {
                                    return option.value;
                                }
                            }
                        }
                        catch (e_5_1) { e_5 = { error: e_5_1 }; }
                        finally {
                            try {
                                if (options_2_1 && !options_2_1.done && (_b = options_2.return)) _b.call(options_2);
                            }
                            finally { if (e_5) throw e_5.error; }
                        }
                    }
                    else {
                        /** @type {?} */
                        var option = (/** @type {?} */ (groupOrOption));
                        if (!option.disabled) {
                            return option.value;
                        }
                    }
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (data_2_1 && !data_2_1.done && (_a = data_2.return)) _a.call(data_2);
                }
                finally { if (e_4) throw e_4.error; }
            }
        }
        return null;
    };
    /**
     * @private
     * @param {?} data
     * @return {?}
     */
    Select2Utils.getOptionsCount = /**
     * @private
     * @param {?} data
     * @return {?}
     */
    function (data) {
        var e_6, _a;
        /** @type {?} */
        var count = 0;
        if (Array.isArray(data)) {
            try {
                for (var data_3 = tslib_1.__values(data), data_3_1 = data_3.next(); !data_3_1.done; data_3_1 = data_3.next()) {
                    var groupOrOption = data_3_1.value;
                    /** @type {?} */
                    var options = ((/** @type {?} */ (groupOrOption))).options;
                    if (options) {
                        count += options.length;
                    }
                    else {
                        count++;
                    }
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (data_3_1 && !data_3_1.done && (_a = data_3.return)) _a.call(data_3);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        return count;
    };
    /**
     * @param {?} filteredData
     * @param {?} value
     * @return {?}
     */
    Select2Utils.valueIsNotInFilteredData = /**
     * @param {?} filteredData
     * @param {?} value
     * @return {?}
     */
    function (filteredData, value) {
        var e_7, _a, e_8, _b;
        if (Select2Utils.isNullOrUndefined(value)) {
            return true;
        }
        try {
            for (var filteredData_1 = tslib_1.__values(filteredData), filteredData_1_1 = filteredData_1.next(); !filteredData_1_1.done; filteredData_1_1 = filteredData_1.next()) {
                var groupOrOption = filteredData_1_1.value;
                /** @type {?} */
                var options = ((/** @type {?} */ (groupOrOption))).options;
                if (options) {
                    try {
                        for (var options_3 = tslib_1.__values(options), options_3_1 = options_3.next(); !options_3_1.done; options_3_1 = options_3.next()) {
                            var option = options_3_1.value;
                            if (option.value === value) {
                                return false;
                            }
                        }
                    }
                    catch (e_8_1) { e_8 = { error: e_8_1 }; }
                    finally {
                        try {
                            if (options_3_1 && !options_3_1.done && (_b = options_3.return)) _b.call(options_3);
                        }
                        finally { if (e_8) throw e_8.error; }
                    }
                }
                else {
                    if (((/** @type {?} */ (groupOrOption))).value === value) {
                        return false;
                    }
                }
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (filteredData_1_1 && !filteredData_1_1.done && (_a = filteredData_1.return)) _a.call(filteredData_1);
            }
            finally { if (e_7) throw e_7.error; }
        }
        return true;
    };
    // tslint:disable-next-line:cognitive-complexity
    // tslint:disable-next-line:cognitive-complexity
    /**
     * @param {?} filteredData
     * @param {?} hoveringValue
     * @return {?}
     */
    Select2Utils.getPreviousOption = 
    // tslint:disable-next-line:cognitive-complexity
    /**
     * @param {?} filteredData
     * @param {?} hoveringValue
     * @return {?}
     */
    function (filteredData, hoveringValue) {
        /** @type {?} */
        var findIt = Select2Utils.isNullOrUndefined(hoveringValue);
        for (var i = filteredData.length - 1; i >= 0; i--) {
            /** @type {?} */
            var groupOrOption = filteredData[i];
            /** @type {?} */
            var options = ((/** @type {?} */ (groupOrOption))).options;
            if (options) {
                for (var j = options.length - 1; j >= 0; j--) {
                    /** @type {?} */
                    var option = options[j];
                    if (findIt) {
                        if (!option.disabled) {
                            return option;
                        }
                    }
                    if (!findIt) {
                        findIt = option.value === hoveringValue;
                    }
                }
            }
            else {
                /** @type {?} */
                var option = (/** @type {?} */ (groupOrOption));
                if (findIt) {
                    if (!option.disabled) {
                        return option;
                    }
                }
                if (!findIt) {
                    findIt = option.value === hoveringValue;
                }
            }
        }
        return null;
    };
    // tslint:disable-next-line:cognitive-complexity
    // tslint:disable-next-line:cognitive-complexity
    /**
     * @param {?} filteredData
     * @param {?} hoveringValue
     * @return {?}
     */
    Select2Utils.getNextOption = 
    // tslint:disable-next-line:cognitive-complexity
    /**
     * @param {?} filteredData
     * @param {?} hoveringValue
     * @return {?}
     */
    function (filteredData, hoveringValue) {
        var e_9, _a, e_10, _b;
        /** @type {?} */
        var findIt = Select2Utils.isNullOrUndefined(hoveringValue);
        try {
            for (var filteredData_2 = tslib_1.__values(filteredData), filteredData_2_1 = filteredData_2.next(); !filteredData_2_1.done; filteredData_2_1 = filteredData_2.next()) {
                var groupOrOption = filteredData_2_1.value;
                /** @type {?} */
                var options = ((/** @type {?} */ (groupOrOption))).options;
                if (options) {
                    try {
                        for (var options_4 = tslib_1.__values(options), options_4_1 = options_4.next(); !options_4_1.done; options_4_1 = options_4.next()) {
                            var option = options_4_1.value;
                            if (findIt) {
                                if (!option.disabled) {
                                    return option;
                                }
                            }
                            else if (!findIt) {
                                findIt = option.value === hoveringValue;
                            }
                        }
                    }
                    catch (e_10_1) { e_10 = { error: e_10_1 }; }
                    finally {
                        try {
                            if (options_4_1 && !options_4_1.done && (_b = options_4.return)) _b.call(options_4);
                        }
                        finally { if (e_10) throw e_10.error; }
                    }
                }
                else {
                    /** @type {?} */
                    var option = (/** @type {?} */ (groupOrOption));
                    if (findIt) {
                        if (!option.disabled) {
                            return option;
                        }
                    }
                    else if (!findIt) {
                        findIt = option.value === hoveringValue;
                    }
                }
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (filteredData_2_1 && !filteredData_2_1.done && (_a = filteredData_2.return)) _a.call(filteredData_2);
            }
            finally { if (e_9) throw e_9.error; }
        }
        return null;
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    Select2Utils.isNullOrUndefined = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return value === null || value === undefined;
    };
    /**
     * @private
     * @param {?} label
     * @param {?} searchText
     * @param {?} editPattern
     * @return {?}
     */
    Select2Utils.containSearchText = /**
     * @private
     * @param {?} label
     * @param {?} searchText
     * @param {?} editPattern
     * @return {?}
     */
    function (label, searchText, editPattern) {
        return searchText
            ? Select2Utils
                .formatSansUnicode(label)
                .match(new RegExp(Select2Utils.formatPattern(searchText, editPattern), 'i')) !== null
            : true;
    };
    /**
     * @private
     * @param {?} str
     * @return {?}
     */
    Select2Utils.protectPattern = /**
     * @private
     * @param {?} str
     * @return {?}
     */
    function (str) {
        return str.replace(new RegExp('[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]', 'g'), '\\$&');
    };
    /**
     * @private
     * @param {?} str
     * @return {?}
     */
    Select2Utils.formatSansUnicode = /**
     * @private
     * @param {?} str
     * @return {?}
     */
    function (str) {
        var e_11, _a;
        try {
            for (var unicodePatterns_1 = tslib_1.__values(unicodePatterns), unicodePatterns_1_1 = unicodePatterns_1.next(); !unicodePatterns_1_1.done; unicodePatterns_1_1 = unicodePatterns_1.next()) {
                var unicodePattern = unicodePatterns_1_1.value;
                str = str.replace(unicodePattern.s, unicodePattern.l);
            }
        }
        catch (e_11_1) { e_11 = { error: e_11_1 }; }
        finally {
            try {
                if (unicodePatterns_1_1 && !unicodePatterns_1_1.done && (_a = unicodePatterns_1.return)) _a.call(unicodePatterns_1);
            }
            finally { if (e_11) throw e_11.error; }
        }
        return str;
    };
    /**
     * @private
     * @param {?} str
     * @param {?} editPattern
     * @return {?}
     */
    Select2Utils.formatPattern = /**
     * @private
     * @param {?} str
     * @param {?} editPattern
     * @return {?}
     */
    function (str, editPattern) {
        str = Select2Utils.formatSansUnicode(Select2Utils.protectPattern(str));
        if (editPattern && typeof editPattern === 'function') {
            str = editPattern(str);
        }
        return str;
    };
    /**
     * @param {?} data
     * @param {?} searchText
     * @param {?=} editPattern
     * @return {?}
     */
    Select2Utils.getFilteredData = /**
     * @param {?} data
     * @param {?} searchText
     * @param {?=} editPattern
     * @return {?}
     */
    function (data, searchText, editPattern) {
        var e_12, _a;
        if (searchText) {
            /** @type {?} */
            var result = [];
            try {
                for (var data_4 = tslib_1.__values(data), data_4_1 = data_4.next(); !data_4_1.done; data_4_1 = data_4.next()) {
                    var groupOrOption = data_4_1.value;
                    /** @type {?} */
                    var options = ((/** @type {?} */ (groupOrOption))).options;
                    if (options) {
                        if (options.some((/**
                         * @param {?} group
                         * @return {?}
                         */
                        function (group) { return Select2Utils.containSearchText(group.label, searchText, editPattern); }))) {
                            /** @type {?} */
                            var filteredOptions = options.filter((/**
                             * @param {?} group
                             * @return {?}
                             */
                            function (group) { return Select2Utils.containSearchText(group.label, searchText, editPattern); }));
                            result.push({
                                label: groupOrOption.label,
                                options: filteredOptions
                            });
                        }
                    }
                    else if (Select2Utils.containSearchText(groupOrOption.label, searchText, editPattern)) {
                        result.push(groupOrOption);
                    }
                }
            }
            catch (e_12_1) { e_12 = { error: e_12_1 }; }
            finally {
                try {
                    if (data_4_1 && !data_4_1.done && (_a = data_4.return)) _a.call(data_4);
                }
                finally { if (e_12) throw e_12.error; }
            }
            return result;
        }
        else {
            return data;
        }
    };
    /**
     * @param {?} data
     * @param {?} selectedOptions
     * @return {?}
     */
    Select2Utils.getFilteredSelectedData = /**
     * @param {?} data
     * @param {?} selectedOptions
     * @return {?}
     */
    function (data, selectedOptions) {
        var e_13, _a;
        /** @type {?} */
        var result = [];
        try {
            for (var data_5 = tslib_1.__values(data), data_5_1 = data_5.next(); !data_5_1.done; data_5_1 = data_5.next()) {
                var groupOrOption = data_5_1.value;
                /** @type {?} */
                var options = ((/** @type {?} */ (groupOrOption))).options;
                if (options) {
                    /** @type {?} */
                    var filteredOptions = options.filter((/**
                     * @param {?} group
                     * @return {?}
                     */
                    function (group) { return Select2Utils.isSelected(selectedOptions, group, true) === 'false'; }));
                    if (filteredOptions.length) {
                        result.push({
                            label: groupOrOption.label,
                            options: filteredOptions
                        });
                    }
                }
                else if (Select2Utils.isSelected(selectedOptions, (/** @type {?} */ (groupOrOption)), true) === 'false') {
                    result.push(groupOrOption);
                }
            }
        }
        catch (e_13_1) { e_13 = { error: e_13_1 }; }
        finally {
            try {
                if (data_5_1 && !data_5_1.done && (_a = data_5.return)) _a.call(data_5);
            }
            finally { if (e_13) throw e_13.error; }
        }
        return result;
    };
    /**
     * @param {?} data
     * @param {?=} minCountForSearch
     * @return {?}
     */
    Select2Utils.isSearchboxHiddex = /**
     * @param {?} data
     * @param {?=} minCountForSearch
     * @return {?}
     */
    function (data, minCountForSearch) {
        if (minCountForSearch === '' || minCountForSearch === undefined || minCountForSearch === null || isNaN(+minCountForSearch)) {
            minCountForSearch = defaultMinCountForSearch;
        }
        /** @type {?} */
        var optionCount = Select2Utils.getOptionsCount(data);
        return optionCount < +minCountForSearch;
    };
    /**
     * @param {?} options
     * @param {?} option
     * @param {?} multiple
     * @return {?}
     */
    Select2Utils.isSelected = /**
     * @param {?} options
     * @param {?} option
     * @param {?} multiple
     * @return {?}
     */
    function (options, option, multiple) {
        return multiple
            ? options && ((/** @type {?} */ (options)))
                .some((/**
             * @param {?} op
             * @return {?}
             */
            function (op) { return op.value === option.value; })) ? 'true' : 'false'
            : options && option.value === ((/** @type {?} */ (options))).value ? 'true' : 'false';
    };
    /**
     * @param {?} options
     * @param {?} option
     * @return {?}
     */
    Select2Utils.removeSelection = /**
     * @param {?} options
     * @param {?} option
     * @return {?}
     */
    function (options, option) {
        for (var i = 0; i < ((/** @type {?} */ (options))).length; i++) {
            if (((/** @type {?} */ (options)))[i].value === option.value) {
                ((/** @type {?} */ (options))).splice(i, 1);
                return;
            }
        }
    };
    return Select2Utils;
}());
export { Select2Utils };
//# sourceMappingURL=data:application/json;base64,